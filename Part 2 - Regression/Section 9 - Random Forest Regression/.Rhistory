print("hello world")
load("C:/Users/suresh/Desktop/Machine Learning A-Z/Part 1 - Data Preprocessing/.RData")
load("C:/Users/suresh/Desktop/Machine Learning A-Z/Part 1 - Data Preprocessing/.RData")
dataset$Salary = ifelse(is.na(dataset$Salary), ave(dataset$Salary, FUN = function(x) mean(x, na.rm=TRUE)),dataset$Salary)
dataset$Country = factor(dataset$Country, levels = c('France', 'Spain', 'Germany'), labels = c(1,2,3))
dataset$Country = factor(dataset$Country, levels = c('Yes', 'No'), labels = c(0,1))
dataset$Country = factor(dataset$Country, levels = c('France', 'Spain', 'Germany'), labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased, levels = c('Yes', 'No'), labels = c(0,1))
dataset=read.csv('Data.csv')
#missing data
dataset$Age=ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm=TRUE)),dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), ave(dataset$Salary, FUN = function(x) mean(x, na.rm=TRUE)),dataset$Salary)
#encoding categorical data
dataset$Country = factor(dataset$Country, levels = c('France', 'Spain', 'Germany'), labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased, levels = c('Yes', 'No'), labels = c(0,1))
dataset=read.csv('Data.csv')
#missing data
dataset$Age=ifelse(is.na(dataset$Age), ave(dataset$Age, FUN = function(x) mean(x, na.rm=TRUE)),dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary), ave(dataset$Salary, FUN = function(x) mean(x, na.rm=TRUE)),dataset$Salary)
#encoding categorical data
dataset$Country = factor(dataset$Country, levels = c('France', 'Spain', 'Germany'), labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased, levels = c('Yes', 'No'), labels = c(0,1))
setwd("C:/Users/suresh/Desktop/Machine Learning A-Z/Part 2 - Regression/Section 7 - Support Vector Regression (SVR)")
install.packages('e1071')
library(e1071)
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
View(dataset)
regressor = svm(formula = Salary ~ ., data = 'Position_Salaries.csv', type = 'eps-regression', kernel = 'rbf')
regressor = svm(formula = Salary ~ ., data = dataset, type = 'eps-regression', kernel = 'rbf')
regressor = svm(formula = Salary ~ ., data = dataset, type = 'eps-regression')
y_pred = predict(regressor, data.frame(Level = 6.5))
# Visualising the SVR results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (SVR Model)') +
xlab('Level') +
ylab('Salary')
setwd("C:/Users/suresh/Desktop/Machine Learning A-Z/Part 2 - Regression/Section 8 - Decision Tree Regression")
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
install.packages('rpart')
library(rpart)
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
View(dataset)
regressor = rpart()
regressor = rpart(formula = Salary ~ ., data = dataset)
y_pred = predict(regressor, data.frame(Level = 6.5))
# Visualising the Decision Tree Regression Model results
# install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Regression Model)') +
xlab('Level') +
ylab('Salary')
# install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Regression Model)') +
xlab('Level') +
ylab('Salary')
regressor = rpart(formula = Salary ~ ., data = dataset, control = rpart.control(minsplit = 1))
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Regression Model)') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Regression Model)') +
xlab('Level') +
ylab('Salary')
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.001)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Decision Tree Regression Model)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(regressor, data.frame(Level = 6.5))
regressor = rpart(formula = Salary ~ ., data = dataset, control = rpart.control(minsplit = 10))
y_pred = predict(regressor, data.frame(Level = 6.5))
setwd("C:/Users/suresh/Desktop/Machine Learning A-Z/Part 2 - Regression/Section 9 - Random Forest Regression")
install.packages('randomForest')
library(randomForest)
# Fitting the Random Forest Regression Model to the dataset
#install.packages('randomForest')
library(randomForest)
regressor = randomForest(x = dataset[1], y = dataset$Salary, ntree = 500)
y_pred = predict(regressor, data.frame(Level = 6.5))
set.seed(1234)
regressor = randomForest(x = dataset[1], y = dataset$Salary, ntree = 500)
y_pred = predict(regressor, data.frame(Level = 6.5))
# Visualising the Random Forest Regression Model results (for higher resolution and smoother curve)
# install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression Model)') +
xlab('Level') +
ylab('Salary')
